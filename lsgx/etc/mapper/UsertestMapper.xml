<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lsgx.admin.mapper.UsertestMapper" >
    <resultMap id="BaseResultMap" type="com.lsgx.admin.model.Usertest" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="birthday" property="birthday" jdbcType="DATE" />
        <result column="sex" property="sex" jdbcType="CHAR" />
        <result column="address" property="address" jdbcType="VARCHAR" />
        <result column="bfile_id" property="bfileId" jdbcType="INTEGER" />
    </resultMap>

    <!-- 用户信息   分页查询 -->
    <select id="queryUserTestList" resultType="com.lsgx.admin.model.Usertest" parameterType="UserTestVO">
        select * from usertest t where 1=1
        <if test="username != null"> and username like '%' #{username} '%'  </if>
        order by id asc
    </select>

    <!-- 用户信息  查询总数 -->
    <select id="queryUserTestListCount" resultType="int" parameterType="com.github.pagehelper.Page">
        select count(1) as a from usertest where 1=1
        <if test="username != null"> and username like '%' #{username} '%'  </if>
    </select>

    <!-- 用户信息 修改 -->
    <update id="userEditOk" parameterType="com.lsgx.admin.model.Usertest">
        update usertest set
        username = #{username},
        address = #{address},
        birthday = #{birthday},
        sex = #{sex}
        where
        id = #{id}
    </update>

    <!-- 用户修改Bfile -->
    <update id="userEditBfileId" parameterType="com.lsgx.admin.model.Usertest">
        update usertest set
        bfile_id=#{bfileId}

        where
        id = #{id}
    </update>
    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
        id, username, birthday, sex, address, bfile_id
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lsgx.admin.model.UsertestExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from usertest
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from usertest
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from usertest
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.lsgx.admin.model.UsertestExample" >
        delete from usertest
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.lsgx.admin.model.Usertest" >
        insert into usertest (id, username, birthday,
        sex, address, bfile_id)
        values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE},
        #{sex,jdbcType=CHAR}, #{address,jdbcType=VARCHAR}, #{bfileId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.lsgx.admin.model.Usertest" >
        insert into usertest
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="username != null" >
                username,
            </if>
            <if test="birthday != null" >
                birthday,
            </if>
            <if test="sex != null" >
                sex,
            </if>
            <if test="address != null" >
                address,
            </if>
            <if test="bfileId != null" >
                bfile_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null" >
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null" >
                #{birthday,jdbcType=DATE},
            </if>
            <if test="sex != null" >
                #{sex,jdbcType=CHAR},
            </if>
            <if test="address != null" >
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="bfileId != null" >
                #{bfileId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.lsgx.admin.model.UsertestExample" resultType="java.lang.Integer" >
        select count(*) from usertest
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update usertest
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.username != null" >
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.birthday != null" >
                birthday = #{record.birthday,jdbcType=DATE},
            </if>
            <if test="record.sex != null" >
                sex = #{record.sex,jdbcType=CHAR},
            </if>
            <if test="record.address != null" >
                address = #{record.address,jdbcType=VARCHAR},
            </if>
            <if test="record.bfileId != null" >
                bfile_id = #{record.bfileId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update usertest
        set id = #{record.id,jdbcType=INTEGER},
        username = #{record.username,jdbcType=VARCHAR},
        birthday = #{record.birthday,jdbcType=DATE},
        sex = #{record.sex,jdbcType=CHAR},
        address = #{record.address,jdbcType=VARCHAR},
        bfile_id = #{record.bfileId,jdbcType=INTEGER}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.lsgx.admin.model.Usertest" >
        update usertest
        <set >
            <if test="username != null" >
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null" >
                birthday = #{birthday,jdbcType=DATE},
            </if>
            <if test="sex != null" >
                sex = #{sex,jdbcType=CHAR},
            </if>
            <if test="address != null" >
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="bfileId != null" >
                bfile_id = #{bfileId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lsgx.admin.model.Usertest" >
    update usertest
    set username = #{username,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      sex = #{sex,jdbcType=CHAR},
      address = #{address,jdbcType=VARCHAR},
      bfile_id = #{bfileId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>